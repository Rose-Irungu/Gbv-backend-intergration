{
    "sourceFile": "gbv_project/accounts/views.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1752650809049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752650818860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from django.contrib.auth import get_user_model\r\n from django.core.mail import send_mail\r\n from django.utils.crypto import get_random_string\r\n \r\n-from .auth_serializers import (\r\n+from .serializers import (\r\n     LoginSerializer,\r\n     ChangePasswordSerializer,\r\n     ResetPasswordRequestSerializer,\r\n     ProfileUpdateSerializer,\r\n"
                },
                {
                    "date": 1752650977315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from django.contrib.auth import get_user_model\r\n from django.core.mail import send_mail\r\n from django.utils.crypto import get_random_string\r\n \r\n-from .serializers import (\r\n+from  import (\r\n     LoginSerializer,\r\n     ChangePasswordSerializer,\r\n     ResetPasswordRequestSerializer,\r\n     ProfileUpdateSerializer,\r\n"
                },
                {
                    "date": 1752651367788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from django.contrib.auth import get_user_model\r\n from django.core.mail import send_mail\r\n from django.utils.crypto import get_random_string\r\n \r\n-from  import (\r\n+from .serializers import (\r\n     LoginSerializer,\r\n     ChangePasswordSerializer,\r\n     ResetPasswordRequestSerializer,\r\n     ProfileUpdateSerializer,\r\n@@ -68,8 +68,5 @@\n             return Response({\"detail\": \"Profile updated\", \"user\": serializer.data})\r\n \r\n         return Response({\"detail\": \"Invalid action\"}, status=400)\r\n \r\n-    def get_permissions(self):\r\n-        if self.request.method == \"POST\" and self.request.query_params.get(\"action\") == \"login\":\r\n-            return [AllowAny()]\r\n-        return [IsAuthenticated()]\r\n+    \r\n"
                },
                {
                    "date": 1752651375294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n \r\n User = get_user_model()\r\n \r\n class AuthView(APIView):\r\n+  \r\n     def post(self, request, *args, **kwargs):\r\n         action = request.query_params.get(\"action\")\r\n         \r\n         if action == \"login\":\r\n@@ -67,6 +68,4 @@\n             serializer.save()\r\n             return Response({\"detail\": \"Profile updated\", \"user\": serializer.data})\r\n \r\n         return Response({\"detail\": \"Invalid action\"}, status=400)\r\n-\r\n-    \r\n"
                },
                {
                    "date": 1752651388883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,57 +15,60 @@\n \r\n User = get_user_model()\r\n \r\n class AuthView(APIView):\r\n-  \r\n-    def post(self, request, *args, **kwargs):\r\n-        action = request.query_params.get(\"action\")\r\n-        \r\n-        if action == \"login\":\r\n-            serializer = LoginSerializer(data=request.data)\r\n-            serializer.is_valid(raise_exception=True)\r\n-            return Response(serializer.validated_data)\r\n+  def get_permissions(self):\r\n+        if self.request.method == \"POST\" and self.request.query_params.get(\"action\") == \"login\":\r\n+            return [AllowAny()]\r\n+        return [IsAuthenticated()]\r\n+  def post(self, request, *args, **kwargs):\r\n+      action = request.query_params.get(\"action\")\r\n+      \r\n+      if action == \"login\":\r\n+          serializer = LoginSerializer(data=request.data)\r\n+          serializer.is_valid(raise_exception=True)\r\n+          return Response(serializer.validated_data)\r\n \r\n-        elif action == \"reset_password\":\r\n-            serializer = ResetPasswordRequestSerializer(data=request.data)\r\n-            serializer.is_valid(raise_exception=True)\r\n-            email = serializer.validated_data[\"email\"]\r\n-            try:\r\n-                user = User.objects.get(email=email)\r\n-                temp_password = get_random_string(8)\r\n-                user.set_password(temp_password)\r\n-                user.save()\r\n+      elif action == \"reset_password\":\r\n+          serializer = ResetPasswordRequestSerializer(data=request.data)\r\n+          serializer.is_valid(raise_exception=True)\r\n+          email = serializer.validated_data[\"email\"]\r\n+          try:\r\n+              user = User.objects.get(email=email)\r\n+              temp_password = get_random_string(8)\r\n+              user.set_password(temp_password)\r\n+              user.save()\r\n \r\n-                send_mail(\r\n-                    \"Your Temporary Password\",\r\n-                    f\"Your new password is: {temp_password}\\nPlease change it after logging in.\",\r\n-                    \"noreply@yourapp.com\",\r\n-                    [email],\r\n-                    fail_silently=False\r\n-                )\r\n-                return Response({\"detail\": \"Password reset. Check your email.\"})\r\n-            except User.DoesNotExist:\r\n-                return Response({\"detail\": \"Email not found.\"}, status=404)\r\n+              send_mail(\r\n+                  \"Your Temporary Password\",\r\n+                  f\"Your new password is: {temp_password}\\nPlease change it after logging in.\",\r\n+                  \"noreply@yourapp.com\",\r\n+                  [email],\r\n+                  fail_silently=False\r\n+              )\r\n+              return Response({\"detail\": \"Password reset. Check your email.\"})\r\n+          except User.DoesNotExist:\r\n+              return Response({\"detail\": \"Email not found.\"}, status=404)\r\n \r\n-        return Response({\"detail\": \"Invalid action\"}, status=400)\r\n+      return Response({\"detail\": \"Invalid action\"}, status=400)\r\n \r\n-    def put(self, request, *args, **kwargs):\r\n-        action = request.query_params.get(\"action\")\r\n+  def put(self, request, *args, **kwargs):\r\n+      action = request.query_params.get(\"action\")\r\n \r\n-        if action == \"change_password\":\r\n-            serializer = ChangePasswordSerializer(data=request.data)\r\n-            serializer.is_valid(raise_exception=True)\r\n-            user = request.user\r\n-            if not user.check_password(serializer.validated_data[\"old_password\"]):\r\n-                return Response({\"detail\": \"Old password incorrect\"}, status=400)\r\n+      if action == \"change_password\":\r\n+          serializer = ChangePasswordSerializer(data=request.data)\r\n+          serializer.is_valid(raise_exception=True)\r\n+          user = request.user\r\n+          if not user.check_password(serializer.validated_data[\"old_password\"]):\r\n+              return Response({\"detail\": \"Old password incorrect\"}, status=400)\r\n \r\n-            user.set_password(serializer.validated_data[\"new_password\"])\r\n-            user.save()\r\n-            return Response({\"detail\": \"Password changed successfully.\"})\r\n+          user.set_password(serializer.validated_data[\"new_password\"])\r\n+          user.save()\r\n+          return Response({\"detail\": \"Password changed successfully.\"})\r\n \r\n-        elif action == \"update_profile\":\r\n-            serializer = ProfileUpdateSerializer(request.user, data=request.data, partial=True)\r\n-            serializer.is_valid(raise_exception=True)\r\n-            serializer.save()\r\n-            return Response({\"detail\": \"Profile updated\", \"user\": serializer.data})\r\n+      elif action == \"update_profile\":\r\n+          serializer = ProfileUpdateSerializer(request.user, data=request.data, partial=True)\r\n+          serializer.is_valid(raise_exception=True)\r\n+          serializer.save()\r\n+          return Response({\"detail\": \"Profile updated\", \"user\": serializer.data})\r\n \r\n-        return Response({\"detail\": \"Invalid action\"}, status=400)\r\n+      return Response({\"detail\": \"Invalid action\"}, status=400)\r\n"
                },
                {
                    "date": 1752651395181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n   def get_permissions(self):\r\n         if self.request.method == \"POST\" and self.request.query_params.get(\"action\") == \"login\":\r\n             return [AllowAny()]\r\n         return [IsAuthenticated()]\r\n+      \r\n   def post(self, request, *args, **kwargs):\r\n       action = request.query_params.get(\"action\")\r\n       \r\n       if action == \"login\":\r\n"
                },
                {
                    "date": 1752651419002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \r\n User = get_user_model()\r\n \r\n class AuthView(APIView):\r\n-  \r\n+  p\r\n   def get_permissions(self):\r\n         if self.request.method == \"POST\" and self.request.query_params.get(\"action\") == \"login\":\r\n             return [AllowAny()]\r\n         return [IsAuthenticated()]\r\n"
                },
                {
                    "date": 1752651427371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \r\n User = get_user_model()\r\n \r\n class AuthView(APIView):\r\n-  permission_classes = [AllowAny,]\r\n+  permission_classes = [AllowAny]\r\n   def get_permissions(self):\r\n         if self.request.method == \"POST\" and self.request.query_params.get(\"action\") == \"login\":\r\n             return [AllowAny()]\r\n         return [IsAuthenticated()]\r\n"
                }
            ],
            "date": 1752650809049,
            "name": "Commit-0",
            "content": "# views.py\r\nfrom rest_framework.views import APIView\r\nfrom rest_framework.response import Response\r\nfrom rest_framework.permissions import IsAuthenticated, AllowAny\r\nfrom django.contrib.auth import get_user_model\r\nfrom django.core.mail import send_mail\r\nfrom django.utils.crypto import get_random_string\r\n\r\nfrom .auth_serializers import (\r\n    LoginSerializer,\r\n    ChangePasswordSerializer,\r\n    ResetPasswordRequestSerializer,\r\n    ProfileUpdateSerializer,\r\n)\r\n\r\nUser = get_user_model()\r\n\r\nclass AuthView(APIView):\r\n    def post(self, request, *args, **kwargs):\r\n        action = request.query_params.get(\"action\")\r\n        \r\n        if action == \"login\":\r\n            serializer = LoginSerializer(data=request.data)\r\n            serializer.is_valid(raise_exception=True)\r\n            return Response(serializer.validated_data)\r\n\r\n        elif action == \"reset_password\":\r\n            serializer = ResetPasswordRequestSerializer(data=request.data)\r\n            serializer.is_valid(raise_exception=True)\r\n            email = serializer.validated_data[\"email\"]\r\n            try:\r\n                user = User.objects.get(email=email)\r\n                temp_password = get_random_string(8)\r\n                user.set_password(temp_password)\r\n                user.save()\r\n\r\n                send_mail(\r\n                    \"Your Temporary Password\",\r\n                    f\"Your new password is: {temp_password}\\nPlease change it after logging in.\",\r\n                    \"noreply@yourapp.com\",\r\n                    [email],\r\n                    fail_silently=False\r\n                )\r\n                return Response({\"detail\": \"Password reset. Check your email.\"})\r\n            except User.DoesNotExist:\r\n                return Response({\"detail\": \"Email not found.\"}, status=404)\r\n\r\n        return Response({\"detail\": \"Invalid action\"}, status=400)\r\n\r\n    def put(self, request, *args, **kwargs):\r\n        action = request.query_params.get(\"action\")\r\n\r\n        if action == \"change_password\":\r\n            serializer = ChangePasswordSerializer(data=request.data)\r\n            serializer.is_valid(raise_exception=True)\r\n            user = request.user\r\n            if not user.check_password(serializer.validated_data[\"old_password\"]):\r\n                return Response({\"detail\": \"Old password incorrect\"}, status=400)\r\n\r\n            user.set_password(serializer.validated_data[\"new_password\"])\r\n            user.save()\r\n            return Response({\"detail\": \"Password changed successfully.\"})\r\n\r\n        elif action == \"update_profile\":\r\n            serializer = ProfileUpdateSerializer(request.user, data=request.data, partial=True)\r\n            serializer.is_valid(raise_exception=True)\r\n            serializer.save()\r\n            return Response({\"detail\": \"Profile updated\", \"user\": serializer.data})\r\n\r\n        return Response({\"detail\": \"Invalid action\"}, status=400)\r\n\r\n    def get_permissions(self):\r\n        if self.request.method == \"POST\" and self.request.query_params.get(\"action\") == \"login\":\r\n            return [AllowAny()]\r\n        return [IsAuthenticated()]\r\n"
        }
    ]
}