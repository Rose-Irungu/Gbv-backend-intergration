{
    "sourceFile": "gbv_project/reports/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1752570601594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752581944243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,44 @@\n from django.db import models\r\n+import string\r\n+import random\r\n \r\n class GBVReport(models.Model):\r\n-    description = models.TextField()\r\n-    location = models.CharField(max_length=255)\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('economic', 'Economic Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(help_text=\"Date and time when the incident occurred\")\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment (renamed from original fields)\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n-    is_emergency = models.BooleanField(default=False)\r\n-    needs_medical_attention = models.BooleanField(default=False)\r\n-\r\n+    \r\n     def __str__(self):\r\n-        return f\"Report {self.id} - {self.location}\"\r\n+        return f\"Report {self.id} - {self.name} - {self.incident_location}\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752582565592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+from django.db import models\r\n+import string\r\n+import random\r\n+\r\n+class GBVReport(models.Model):\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('economic', 'Economic Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(help_text=\"Date and time when the incident occurred\")\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n+    reference_code = models.CharField(\r\n+        max_length=10, \r\n+        unique=True, \r\n+        blank=True,\r\n+        help_text=\"Unique reference code for tracking the report\"\r\n+    )\r\n+    date_reported = models.DateTimeField(auto_now_add=True)\r\n+    \r\n+    def save(self, *args, **kwargs):\r\n+        \"\"\"Generate reference code if not provided\"\"\"\r\n+        if not self.reference_code:\r\n+            self.reference_code = self.generate_reference_code()\r\n+        super().save(*args, **kwargs)\r\n+    \r\n+    def generate_reference_code(self):\r\n+        \"\"\"Generate a unique reference code\"\"\"\r\n+        while True:\r\n+            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n+            if not GBVReport.objects.filter(reference_code=code).exists():\r\n+                return code\r\n+    \r\n+    def __str__(self):\r\n+        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n+    \r\n+    class Meta:\r\n+        ordering = ['-date_reported']\r\n+        verbose_name = \"GBV Report\"\r\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752645595097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(help_text=\"Date and time when the incident occurred\")\r\n+    incident_date = models.DateTimeField(,help_text=\"Date and time when the incident occurred\")\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n@@ -64,49 +64,5 @@\n     \r\n     class Meta:\r\n         ordering = ['-date_reported']\r\n         verbose_name = \"GBV Report\"\r\n-        verbose_name_plural = \"GBV Reports\"\n-from django.db import models\r\n-import string\r\n-import random\r\n-\r\n-class GBVReport(models.Model):\r\n-    INCIDENT_TYPE_CHOICES = [\r\n-        ('physical', 'Physical Violence'),\r\n-        ('sexual', 'Sexual Violence'),\r\n-        ('emotional', 'Emotional/Psychological'),\r\n-        ('economic', 'Economic Violence'),\r\n-        ('other', 'Other'),\r\n-    ]\r\n-    \r\n-    # Personal Information (Required)\r\n-    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n-    email = models.EmailField(help_text=\"Email address for contact\")\r\n-    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n-    \r\n-    # Incident Information\r\n-    incident_date = models.DateTimeField(help_text=\"Date and time when the incident occurred\")\r\n-    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n-    incident_type = models.CharField(\r\n-        max_length=20, \r\n-        choices=INCIDENT_TYPE_CHOICES, \r\n-        default='physical',\r\n-        help_text=\"Type of incident reported\"\r\n-    )\r\n-    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n-    \r\n-    # Safety Assessment (renamed from original fields)\r\n-    immediate_danger = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter is in immediate danger\"\r\n-    )\r\n-    needs_medical_attention = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter needs medical attention\"\r\n-    )\r\n-    \r\n-    # System Fields\r\n-    date_reported = models.DateTimeField(auto_now_add=True)\r\n-    \r\n-    def __str__(self):\r\n-        return f\"Report {self.id} - {self.name} - {self.incident_location}\"\n\\ No newline at end of file\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752645601509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+from django.db import models\r\n+import string\r\n+import random\r\n+\r\n+class GBVReport(models.Model):\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('economic', 'Economic Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(auto_now_add=,help_text=\"Date and time when the incident occurred\")\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n+    reference_code = models.CharField(\r\n+        max_length=10, \r\n+        unique=True, \r\n+        blank=True,\r\n+        help_text=\"Unique reference code for tracking the report\"\r\n+    )\r\n+    date_reported = models.DateTimeField(auto_now_add=True)\r\n+    \r\n+    def save(self, *args, **kwargs):\r\n+        \"\"\"Generate reference code if not provided\"\"\"\r\n+        if not self.reference_code:\r\n+            self.reference_code = self.generate_reference_code()\r\n+        super().save(*args, **kwargs)\r\n+    \r\n+    def generate_reference_code(self):\r\n+        \"\"\"Generate a unique reference code\"\"\"\r\n+        while True:\r\n+            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n+            if not GBVReport.objects.filter(reference_code=code).exists():\r\n+                return code\r\n+    \r\n+    def __str__(self):\r\n+        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n+    \r\n+    class Meta:\r\n+        ordering = ['-date_reported']\r\n+        verbose_name = \"GBV Report\"\r\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752645607205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(auto_now_add=,help_text=\"Date and time when the incident occurred\")\r\n+    incident_date = models.DateTimeField(auto_now_add=Tr,help_text=\"Date and time when the incident occurred\")\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n@@ -64,73 +64,5 @@\n     \r\n     class Meta:\r\n         ordering = ['-date_reported']\r\n         verbose_name = \"GBV Report\"\r\n-        verbose_name_plural = \"GBV Reports\"\n-from django.db import models\r\n-import string\r\n-import random\r\n-\r\n-class GBVReport(models.Model):\r\n-    INCIDENT_TYPE_CHOICES = [\r\n-        ('physical', 'Physical Violence'),\r\n-        ('sexual', 'Sexual Violence'),\r\n-        ('emotional', 'Emotional/Psychological'),\r\n-        ('economic', 'Economic Violence'),\r\n-        ('other', 'Other'),\r\n-    ]\r\n-    \r\n-    # Personal Information (Required)\r\n-    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n-    email = models.EmailField(help_text=\"Email address for contact\")\r\n-    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n-    \r\n-    # Incident Information\r\n-    incident_date = models.DateTimeField(,help_text=\"Date and time when the incident occurred\")\r\n-    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n-    incident_type = models.CharField(\r\n-        max_length=20, \r\n-        choices=INCIDENT_TYPE_CHOICES, \r\n-        default='physical',\r\n-        help_text=\"Type of incident reported\"\r\n-    )\r\n-    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n-    \r\n-    # Safety Assessment\r\n-    immediate_danger = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter is in immediate danger\"\r\n-    )\r\n-    needs_medical_attention = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter needs medical attention\"\r\n-    )\r\n-    \r\n-    # System Fields\r\n-    reference_code = models.CharField(\r\n-        max_length=10, \r\n-        unique=True, \r\n-        blank=True,\r\n-        help_text=\"Unique reference code for tracking the report\"\r\n-    )\r\n-    date_reported = models.DateTimeField(auto_now_add=True)\r\n-    \r\n-    def save(self, *args, **kwargs):\r\n-        \"\"\"Generate reference code if not provided\"\"\"\r\n-        if not self.reference_code:\r\n-            self.reference_code = self.generate_reference_code()\r\n-        super().save(*args, **kwargs)\r\n-    \r\n-    def generate_reference_code(self):\r\n-        \"\"\"Generate a unique reference code\"\"\"\r\n-        while True:\r\n-            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n-            if not GBVReport.objects.filter(reference_code=code).exists():\r\n-                return code\r\n-    \r\n-    def __str__(self):\r\n-        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n-    \r\n-    class Meta:\r\n-        ordering = ['-date_reported']\r\n-        verbose_name = \"GBV Report\"\r\n         verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752646904059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(auto_now_add=Tr,help_text=\"Date and time when the incident occurred\")\r\n+    incident_date = models.DateTimeField(auto_now_add=True,help_text=\"Date and time when the incident occurred\")\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n@@ -40,9 +40,8 @@\n     # System Fields\r\n     reference_code = models.CharField(\r\n         max_length=10, \r\n         unique=True, \r\n-        blank=True,\r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n     \r\n"
                },
                {
                    "date": 1752646915102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,8 @@\n     )\r\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n-        max_length=10, \r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n"
                },
                {
                    "date": 1752646926426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n     )\r\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n+\r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n"
                },
                {
                    "date": 1752646935793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+from django.db import models\r\n+import string\r\n+import random\r\n+\r\n+class GBVReport(models.Model):\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('economic', 'Economic Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(auto_now_add=True,help_text=\"Date and time when the incident occurred\")\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n+    reference_code = models.CharField(\r\n+        max_length=1, \r\n+        unique=True, \r\n+        help_text=\"Unique reference code for tracking the report\"\r\n+    )\r\n+    date_reported = models.DateTimeField(auto_now_add=True)\r\n+    \r\n+    def save(self, *args, **kwargs):\r\n+        \"\"\"Generate reference code if not provided\"\"\"\r\n+        if not self.reference_code:\r\n+            self.reference_code = self.generate_reference_code()\r\n+        super().save(*args, **kwargs)\r\n+    \r\n+    def generate_reference_code(self):\r\n+        \"\"\"Generate a unique reference code\"\"\"\r\n+        while True:\r\n+            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n+            if not GBVReport.objects.filter(reference_code=code).exists():\r\n+                return code\r\n+    \r\n+    def __str__(self):\r\n+        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n+    \r\n+    class Meta:\r\n+        ordering = ['-date_reported']\r\n+        verbose_name = \"GBV Report\"\r\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752646941242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     )\r\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n-        max_length=1, \r\n+        max_length=15, \r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n@@ -63,72 +63,5 @@\n     \r\n     class Meta:\r\n         ordering = ['-date_reported']\r\n         verbose_name = \"GBV Report\"\r\n-        verbose_name_plural = \"GBV Reports\"\n-from django.db import models\r\n-import string\r\n-import random\r\n-\r\n-class GBVReport(models.Model):\r\n-    INCIDENT_TYPE_CHOICES = [\r\n-        ('physical', 'Physical Violence'),\r\n-        ('sexual', 'Sexual Violence'),\r\n-        ('emotional', 'Emotional/Psychological'),\r\n-        ('economic', 'Economic Violence'),\r\n-        ('other', 'Other'),\r\n-    ]\r\n-    \r\n-    # Personal Information (Required)\r\n-    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n-    email = models.EmailField(help_text=\"Email address for contact\")\r\n-    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n-    \r\n-    # Incident Information\r\n-    incident_date = models.DateTimeField(auto_now_add=True,help_text=\"Date and time when the incident occurred\")\r\n-    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n-    incident_type = models.CharField(\r\n-        max_length=20, \r\n-        choices=INCIDENT_TYPE_CHOICES, \r\n-        default='physical',\r\n-        help_text=\"Type of incident reported\"\r\n-    )\r\n-    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n-    \r\n-    # Safety Assessment\r\n-    immediate_danger = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter is in immediate danger\"\r\n-    )\r\n-    needs_medical_attention = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter needs medical attention\"\r\n-    )\r\n-    \r\n-    # System Fields\r\n-    reference_code = models.CharField(\r\n-\r\n-        unique=True, \r\n-        help_text=\"Unique reference code for tracking the report\"\r\n-    )\r\n-    date_reported = models.DateTimeField(auto_now_add=True)\r\n-    \r\n-    def save(self, *args, **kwargs):\r\n-        \"\"\"Generate reference code if not provided\"\"\"\r\n-        if not self.reference_code:\r\n-            self.reference_code = self.generate_reference_code()\r\n-        super().save(*args, **kwargs)\r\n-    \r\n-    def generate_reference_code(self):\r\n-        \"\"\"Generate a unique reference code\"\"\"\r\n-        while True:\r\n-            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n-            if not GBVReport.objects.filter(reference_code=code).exists():\r\n-                return code\r\n-    \r\n-    def __str__(self):\r\n-        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n-    \r\n-    class Meta:\r\n-        ordering = ['-date_reported']\r\n-        verbose_name = \"GBV Report\"\r\n         verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752646948278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,10 @@\n     )\r\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n-        max_length=15, \r\n+        max_length=50, \r\n+        \r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n"
                },
                {
                    "date": 1752646954372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n         max_length=50, \r\n-        \r\n+        p\r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n"
                },
                {
                    "date": 1752646960378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+from django.db import models\r\n+import string\r\n+import random\r\n+\r\n+class GBVReport(models.Model):\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('economic', 'Economic Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(auto_now_add=True,help_text=\"Date and time when the incident occurred\")\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n+    reference_code = models.CharField(\r\n+        max_length=50, \r\n+        primary_key=Tr\r\n+        unique=True, \r\n+        help_text=\"Unique reference code for tracking the report\"\r\n+    )\r\n+    date_reported = models.DateTimeField(auto_now_add=True)\r\n+    \r\n+    def save(self, *args, **kwargs):\r\n+        \"\"\"Generate reference code if not provided\"\"\"\r\n+        if not self.reference_code:\r\n+            self.reference_code = self.generate_reference_code()\r\n+        super().save(*args, **kwargs)\r\n+    \r\n+    def generate_reference_code(self):\r\n+        \"\"\"Generate a unique reference code\"\"\"\r\n+        while True:\r\n+            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n+            if not GBVReport.objects.filter(reference_code=code).exists():\r\n+                return code\r\n+    \r\n+    def __str__(self):\r\n+        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n+    \r\n+    class Meta:\r\n+        ordering = ['-date_reported']\r\n+        verbose_name = \"GBV Report\"\r\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752647141484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,10 @@\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n         max_length=50, \r\n-        primary_key=Tr\r\n+        \r\n+        primary_key=True,\r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n     date_reported = models.DateTimeField(auto_now_add=True)\r\n@@ -64,73 +65,5 @@\n     \r\n     class Meta:\r\n         ordering = ['-date_reported']\r\n         verbose_name = \"GBV Report\"\r\n-        verbose_name_plural = \"GBV Reports\"\n-from django.db import models\r\n-import string\r\n-import random\r\n-\r\n-class GBVReport(models.Model):\r\n-    INCIDENT_TYPE_CHOICES = [\r\n-        ('physical', 'Physical Violence'),\r\n-        ('sexual', 'Sexual Violence'),\r\n-        ('emotional', 'Emotional/Psychological'),\r\n-        ('economic', 'Economic Violence'),\r\n-        ('other', 'Other'),\r\n-    ]\r\n-    \r\n-    # Personal Information (Required)\r\n-    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n-    email = models.EmailField(help_text=\"Email address for contact\")\r\n-    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n-    \r\n-    # Incident Information\r\n-    incident_date = models.DateTimeField(auto_now_add=True,help_text=\"Date and time when the incident occurred\")\r\n-    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n-    incident_type = models.CharField(\r\n-        max_length=20, \r\n-        choices=INCIDENT_TYPE_CHOICES, \r\n-        default='physical',\r\n-        help_text=\"Type of incident reported\"\r\n-    )\r\n-    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n-    \r\n-    # Safety Assessment\r\n-    immediate_danger = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter is in immediate danger\"\r\n-    )\r\n-    needs_medical_attention = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter needs medical attention\"\r\n-    )\r\n-    \r\n-    # System Fields\r\n-    reference_code = models.CharField(\r\n-        max_length=50, \r\n-        p\r\n-        unique=True, \r\n-        help_text=\"Unique reference code for tracking the report\"\r\n-    )\r\n-    date_reported = models.DateTimeField(auto_now_add=True)\r\n-    \r\n-    def save(self, *args, **kwargs):\r\n-        \"\"\"Generate reference code if not provided\"\"\"\r\n-        if not self.reference_code:\r\n-            self.reference_code = self.generate_reference_code()\r\n-        super().save(*args, **kwargs)\r\n-    \r\n-    def generate_reference_code(self):\r\n-        \"\"\"Generate a unique reference code\"\"\"\r\n-        while True:\r\n-            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n-            if not GBVReport.objects.filter(reference_code=code).exists():\r\n-                return code\r\n-    \r\n-    def __str__(self):\r\n-        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n-    \r\n-    class Meta:\r\n-        ordering = ['-date_reported']\r\n-        verbose_name = \"GBV Report\"\r\n         verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752647148353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n         max_length=50, \r\n-        \r\n+        blank=True\r\n         primary_key=True,\r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n"
                },
                {
                    "date": 1752648888878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(auto_now_add=True,help_text=\"Date and time when the incident occurred\")\r\n+    incident_date = models.DateTimeField()\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n@@ -39,9 +39,9 @@\n     \r\n     # System Fields\r\n     reference_code = models.CharField(\r\n         max_length=50, \r\n-        blank=True\r\n+        blank=True,\r\n         primary_key=True,\r\n         unique=True, \r\n         help_text=\"Unique reference code for tracking the report\"\r\n     )\r\n"
                },
                {
                    "date": 1752648894167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+from django.db import models\r\n+import string\r\n+import random\r\n+\r\n+class GBVReport(models.Model):\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('economic', 'Economic Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(default=)\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n+    reference_code = models.CharField(\r\n+        max_length=50, \r\n+        blank=True,\r\n+        primary_key=True,\r\n+        unique=True, \r\n+        help_text=\"Unique reference code for tracking the report\"\r\n+    )\r\n+    date_reported = models.DateTimeField(auto_now_add=True)\r\n+    \r\n+    def save(self, *args, **kwargs):\r\n+        \"\"\"Generate reference code if not provided\"\"\"\r\n+        if not self.reference_code:\r\n+            self.reference_code = self.generate_reference_code()\r\n+        super().save(*args, **kwargs)\r\n+    \r\n+    def generate_reference_code(self):\r\n+        \"\"\"Generate a unique reference code\"\"\"\r\n+        while True:\r\n+            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n+            if not GBVReport.objects.filter(reference_code=code).exists():\r\n+                return code\r\n+    \r\n+    def __str__(self):\r\n+        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n+    \r\n+    class Meta:\r\n+        ordering = ['-date_reported']\r\n+        verbose_name = \"GBV Report\"\r\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752648902337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n from django.db import models\r\n+from date\r\n import string\r\n import random\r\n \r\n class GBVReport(models.Model):\r\n@@ -65,74 +66,5 @@\n     \r\n     class Meta:\r\n         ordering = ['-date_reported']\r\n         verbose_name = \"GBV Report\"\r\n-        verbose_name_plural = \"GBV Reports\"\n-from django.db import models\r\n-import string\r\n-import random\r\n-\r\n-class GBVReport(models.Model):\r\n-    INCIDENT_TYPE_CHOICES = [\r\n-        ('physical', 'Physical Violence'),\r\n-        ('sexual', 'Sexual Violence'),\r\n-        ('emotional', 'Emotional/Psychological'),\r\n-        ('economic', 'Economic Violence'),\r\n-        ('other', 'Other'),\r\n-    ]\r\n-    \r\n-    # Personal Information (Required)\r\n-    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n-    email = models.EmailField(help_text=\"Email address for contact\")\r\n-    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n-    \r\n-    # Incident Information\r\n-    incident_date = models.DateTimeField()\r\n-    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n-    incident_type = models.CharField(\r\n-        max_length=20, \r\n-        choices=INCIDENT_TYPE_CHOICES, \r\n-        default='physical',\r\n-        help_text=\"Type of incident reported\"\r\n-    )\r\n-    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n-    \r\n-    # Safety Assessment\r\n-    immediate_danger = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter is in immediate danger\"\r\n-    )\r\n-    needs_medical_attention = models.BooleanField(\r\n-        default=False, \r\n-        help_text=\"Indicates if the reporter needs medical attention\"\r\n-    )\r\n-    \r\n-    # System Fields\r\n-    reference_code = models.CharField(\r\n-        max_length=50, \r\n-        blank=True,\r\n-        primary_key=True,\r\n-        unique=True, \r\n-        help_text=\"Unique reference code for tracking the report\"\r\n-    )\r\n-    date_reported = models.DateTimeField(auto_now_add=True)\r\n-    \r\n-    def save(self, *args, **kwargs):\r\n-        \"\"\"Generate reference code if not provided\"\"\"\r\n-        if not self.reference_code:\r\n-            self.reference_code = self.generate_reference_code()\r\n-        super().save(*args, **kwargs)\r\n-    \r\n-    def generate_reference_code(self):\r\n-        \"\"\"Generate a unique reference code\"\"\"\r\n-        while True:\r\n-            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n-            if not GBVReport.objects.filter(reference_code=code).exists():\r\n-                return code\r\n-    \r\n-    def __str__(self):\r\n-        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n-    \r\n-    class Meta:\r\n-        ordering = ['-date_reported']\r\n-        verbose_name = \"GBV Report\"\r\n         verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752648910283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n from django.db import models\r\n-from date\r\n+from datetime import date\r\n import string\r\n import random\r\n \r\n class GBVReport(models.Model):\r\n"
                },
                {
                    "date": 1752648920426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n from django.db import models\r\n-from datetime import date\r\n+from datetime import datetime\r\n import string\r\n import random\r\n \r\n class GBVReport(models.Model):\r\n@@ -17,9 +17,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(default=)\r\n+    incident_date = models.DateTimeField(default=date)\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n"
                },
                {
                    "date": 1752648929110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(default=date)\r\n+    incident_date = models.DateTimeField(default=datetime.n)\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n"
                },
                {
                    "date": 1753339549367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     INCIDENT_TYPE_CHOICES = [\r\n         ('physical', 'Physical Violence'),\r\n         ('sexual', 'Sexual Violence'),\r\n         ('emotional', 'Emotional/Psychological'),\r\n-        ('economic', 'Economic Violence'),\r\n+        ('', 'Economic Violence'),\r\n         ('other', 'Other'),\r\n     ]\r\n     \r\n     # Personal Information (Required)\r\n@@ -17,9 +17,9 @@\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n     \r\n     # Incident Information\r\n-    incident_date = models.DateTimeField(default=datetime.n)\r\n+    incident_date = models.DateTimeField(default=datetime.now())\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n         choices=INCIDENT_TYPE_CHOICES, \r\n"
                },
                {
                    "date": 1753339554842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     INCIDENT_TYPE_CHOICES = [\r\n         ('physical', 'Physical Violence'),\r\n         ('sexual', 'Sexual Violence'),\r\n         ('emotional', 'Emotional/Psychological'),\r\n-        ('', 'Economic Violence'),\r\n+        ('online', 'Economic Violence'),\r\n         ('other', 'Other'),\r\n     ]\r\n     \r\n     # Personal Information (Required)\r\n"
                },
                {
                    "date": 1753339560002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     INCIDENT_TYPE_CHOICES = [\r\n         ('physical', 'Physical Violence'),\r\n         ('sexual', 'Sexual Violence'),\r\n         ('emotional', 'Emotional/Psychological'),\r\n-        ('online', 'Economic Violence'),\r\n+        ('online', ' Violence'),\r\n         ('other', 'Other'),\r\n     ]\r\n     \r\n     # Personal Information (Required)\r\n"
                },
                {
                    "date": 1753339565332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+from django.db import models\r\n+from datetime import datetime\r\n+import string\r\n+import random\r\n+\r\n+class GBVReport(models.Model):\r\n+    INCIDENT_TYPE_CHOICES = [\r\n+        ('physical', 'Physical Violence'),\r\n+        ('sexual', 'Sexual Violence'),\r\n+        ('emotional', 'Emotional/Psychological'),\r\n+        ('online', 'Online Violence'),\r\n+        ('other', 'Other'),\r\n+    ]\r\n+    \r\n+    # Personal Information (Required)\r\n+    name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n+    email = models.EmailField(help_text=\"Email address for contact\")\r\n+    phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n+    \r\n+    # Incident Information\r\n+    incident_date = models.DateTimeField(default=datetime.now())\r\n+    incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n+    incident_type = models.CharField(\r\n+        max_length=20, \r\n+        choices=INCIDENT_TYPE_CHOICES, \r\n+        default='physical',\r\n+        help_text=\"Type of incident reported\"\r\n+    )\r\n+    description = models.TextField(help_text=\"Detailed description of the incident\")\r\n+    \r\n+    # Safety Assessment\r\n+    immediate_danger = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter is in immediate danger\"\r\n+    )\r\n+    needs_medical_attention = models.BooleanField(\r\n+        default=False, \r\n+        help_text=\"Indicates if the reporter needs medical attention\"\r\n+    )\r\n+    \r\n+    # System Fields\r\n+    reference_code = models.CharField(\r\n+        max_length=50, \r\n+        blank=True,\r\n+        primary_key=True,\r\n+        unique=True, \r\n+        help_text=\"Unique reference code for tracking the report\"\r\n+    )\r\n+    date_reported = models.DateTimeField(auto_now_add=True)\r\n+    \r\n+    def save(self, *args, **kwargs):\r\n+        \"\"\"Generate reference code if not provided\"\"\"\r\n+        if not self.reference_code:\r\n+            self.reference_code = self.generate_reference_code()\r\n+        super().save(*args, **kwargs)\r\n+    \r\n+    def generate_reference_code(self):\r\n+        \"\"\"Generate a unique reference code\"\"\"\r\n+        while True:\r\n+            code = 'GBV' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\r\n+            if not GBVReport.objects.filter(reference_code=code).exists():\r\n+                return code\r\n+    \r\n+    def __str__(self):\r\n+        return f\"Report {self.reference_code} - {self.name} - {self.incident_location}\"\r\n+    \r\n+    class Meta:\r\n+        ordering = ['-date_reported']\r\n+        verbose_name = \"GBV Report\"\r\n+        verbose_name_plural = \"GBV Reports\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753339571101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     INCIDENT_TYPE_CHOICES = [\r\n         ('physical', 'Physical Violence'),\r\n         ('sexual', 'Sexual Violence'),\r\n         ('emotional', 'Emotional/Psychological'),\r\n-        ('online', 'Online '),\r\n+        ('online', 'Online Bu'),\r\n         ('other', 'Other'),\r\n     ]\r\n     \r\n     # Personal Information (Required)\r\n"
                },
                {
                    "date": 1755844904878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     # Personal Information (Required)\r\n     name = models.CharField(max_length=255, help_text=\"Full name of the reporter\")\r\n     email = models.EmailField(help_text=\"Email address for contact\")\r\n     phone = models.CharField(max_length=20, help_text=\"Phone number for contact\")\r\n-    reporter = models.ForeignKey(settings.)\r\n+    reporter = models.ForeignKey(settings.\\)\r\n     incident_date = models.DateTimeField(default=datetime.now())\r\n     incident_location = models.CharField(max_length=255, help_text=\"Location where the incident occurred\") \r\n     incident_type = models.CharField(\r\n         max_length=20, \r\n"
                }
            ],
            "date": 1752570601594,
            "name": "Commit-0",
            "content": "from django.db import models\r\n\r\nclass GBVReport(models.Model):\r\n    description = models.TextField()\r\n    location = models.CharField(max_length=255)\r\n    date_reported = models.DateTimeField(auto_now_add=True)\r\n    is_emergency = models.BooleanField(default=False)\r\n    needs_medical_attention = models.BooleanField(default=False)\r\n\r\n    def __str__(self):\r\n        return f\"Report {self.id} - {self.location}\"\r\n"
        }
    ]
}